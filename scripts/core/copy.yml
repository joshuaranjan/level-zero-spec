--- #--------------------------------------------------------------------------
type: header
desc: "Intel $Xx Driver APIs for Copies"
--- #--------------------------------------------------------------------------
type: function
desc: "Copies host, device, or shared memory."
name: $xCommandListEncodeMemoryCopy
details:
    - "The memory pointed to by both srcptr and dstptr must be accessible by
      the device on which the command list is created."
analogue:
    - "**clEnqueueCopyBuffer**"
    - "**clEnqueueReadBuffer**"
    - "**clEnqueueWriteBuffer**"
    - "**clEnqueueSVMMemcpy**"
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: "void*"
      name: dstptr
      desc: "[in] pointer to destination memory to copy to"
    - type: "const void*"
      name: srcptr
      desc: "[in] pointer to source memory to copy from"
    - type: size_t
      name: size
      desc: "[in] size in bytes to copy"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "nullptr for dstptr"
        - "nullptr for srcptr"
--- #--------------------------------------------------------------------------
type: function
desc: "Copies a resource."
name: $xCommandListEncodeResourceCopy
analogue:
    - "**clEnqueueCopyImage**"
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: $x_resource_handle_t
      name: hDstResource
      desc: "[in] handle of destination resource to copy to"
    - type: $x_resource_handle_t
      name: hSrcResource
      desc: "[in] handle of source resource to copy from"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDstResource"
        - "invalid handle for hSrcResource"
--- #--------------------------------------------------------------------------
type: struct
desc: "Region descriptor"
name: $xResourceRegion
members:
    - type: size_t
      name: offset
      desc: "[in] offset in bytes from base"
    - type: size_t
      name: size
      desc: "[in] size in bytes from base+offset"
--- #--------------------------------------------------------------------------
type: function
desc: "Copies a region of a resource."
name: $xCommandListEncodeResourceCopyRegion
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: $x_resource_handle_t
      name: hDstResource
      desc: "[in] handle of destination resource to copy to"
    - type: "$xResourceRegion*"
      name: pDstRegion
      desc: "[in] destination region descriptor"
    - type: $x_resource_handle_t
      name: hSrcResource
      desc: "[in] handle of source resource to copy from"
    - type: "$xResourceRegion*"
      name: pSrcRegion
      desc: "[in] source region descriptor"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDstResource"
        - "invalid handle for hSrcResource"
--- #--------------------------------------------------------------------------
type: function
desc: "Copies from a resource to device or shared memory."
name: $xCommandListEncodeResourceCopyToMemory
analogue:
    - clEnqueueReadImage
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: "void*"
      name: dstptr
      desc: "[in] pointer to destination memory to copy to"
    - type: $x_resource_handle_t
      name: hSrcResource
      desc: "[in] handle of source resource to copy from"
    - type: "$xResourceRegion*"
      name: pSrcRegion
      desc: "[in] source region descriptor"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "nullptr for dstptr"
        - "invalid handle for hSrcResource"
--- #--------------------------------------------------------------------------
type: function
desc: "Copies to a resource from device or shared memory."
name: $xCommandListEncodeResourceCopyFromMemory
analogue:
    - clEnqueueWriteImage
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: $x_resource_handle_t
      name: hDstResource
      desc: "[in] handle of destination resource to copy to"
    - type: "$xResourceRegion*"
      name: pDstRegion
      desc: "[in] destination region descriptor"
    - type: "void*"
      name: srcptr
      desc: "[in] pointer to source memory to copy from"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDstResource"
        - "nullptr for srcptr"
--- #--------------------------------------------------------------------------
type: function
desc: "Asynchronously prefetches shared memory to the device associated with
      the specified command list"
name: $xCommandListEncodeMemoryPrefetch
details:
    - "This is a hint to improve performance only and is not required for correctness."
    - "@todo Ben: confirm we do not need a synchronous prefetch.
       @todo Ben/Ankur: could/should we support prefetches to other devices?
       @todo Ben/Ankur: could/should we support prefetches to the host?"
analogue:
    - cudaMemPrefetchAsync
    - clEnqueueSVMMigrateMem
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list"
    - type: "const void*"
      name: ptr
      desc: "[in] pointer to start of the memory region to prefetch"
    - type: "size_t"
      name: count
      desc: "[in] size in bytes of the memory region to prefetch"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDstResource"
        - "nullptr for srcptr"
