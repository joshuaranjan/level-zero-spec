--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero APIs"
ordinal: "0"
--- #--------------------------------------------------------------------------
type: enum
desc: "Supported initialization flags"
class: $x
name: $x_init_flag_t
etors:
    - name: $X_INIT_FLAG_NONE
      value: "0"
      desc: "default behavior"
    - name: $X_INIT_FLAG_GPU_ONLY
      value: "$X_BIT(0)"
      desc: "only initialize GPU drivers"
--- #--------------------------------------------------------------------------
type: function
desc: "Initialize the $OneApi driver and must be called before any other API function."
class: $x
name: Init
decl: static
ordinal: "0"
details: 
    - "If this function is not called then all other functions will return $X_RESULT_ERROR_UNINITIALIZED."
    - "Only one instance of a driver per process will be initialized."
    - "This function is thread-safe for scenarios where multiple libraries may initialize the driver simultaneously."
analogue:
    - "**cuInit**"
params:
    - type: $x_init_flag_t
      name: flags
      desc: "[in] initialization flags"
returns:
    - $X_RESULT_ERROR_INVALID_ARGUMENT:
        - "invalid value for flags"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Returns the current version of the installed driver for the specified device group."
class: $xDeviceGroup
name: GetDriverVersion
ordinal: "1"
details:
    - "The driver version is a non-zero, monotonically increasing value where higher values always indicate a more recent version."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
analogue:
    - "**cuDriverGetVersion**"
params:
    - type: $x_device_group_handle_t
      name: hDeviceGroup
      desc: "[in] handle of device group"
    - type: "uint32_t*"
      name: version
      desc: "[out] driver version"
