--- #--------------------------------------------------------------------------
type: header
desc: "Intel $Xx Driver APIs for Module"
--- #--------------------------------------------------------------------------
type: macro
desc: API version of $x_command_queue_desc_t
name: $X_MODULE_DESC_VERSION
value: "$X_MAKE_VERSION( 1, 0 )"
--- #--------------------------------------------------------------------------
type: enum
desc: "Supported module creation input formats"
name: $x_module_format_t
etors:
    - name: $X_MODULE_IL_SPIRV_TEXT
      value: "0"
      desc: "Format is SPIRV IL text format"
    - name: $X_MODULE_ISA
      desc: "Format is Gen ISA format"
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module object from an input IL or ISA."
name: $xCreateModule
analogue:
    - "**cuModuleLoad**"
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "$x_module_format_t"
      name: format
      desc: "[in] Module format passed in with pInputModule"
    - type: "uint32_t"
      name: inputSize
      desc: "[in] size of input IL or ISA from pInputModule."
    - type: "const char*"
      name: pInputModule
      desc: "[in] pointer to IL or ISA"
    - type: "$x_module_handle_t*"
      name: phModule
      desc: "[out] pointer to handle of module object created"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "invalid format"
        - "nullptr for pInputModule"
        - "nullptr for phModule"
        - "0 for inputSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Destroys module"
name: $xDestroyModule
analogue:
    - "**cuModuleUnload**"
params:
    - type: "$x_module_handle_t"
      name: hModule
      desc: "[in] handle of the module"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module object from an input IL or ISA."
name: $xModuleGetISA
analogue:
    - "**cuModuleLoad**"
    - "cuCtxGetCurrent"
params:
    - type: $x_module_handle_t
      name: hModule
      desc: "[in] handle of the device"
    - type: "uint32_t*"
      name: pIsaSize
      desc: "[out] size of ISA buffer provided by pModuleISA."
    - type: "char**"
      name: pModuleISA
      desc: "[out] pointer to IL or ISA"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "invalid format"
        - "nullptr for pInputModule"
        - "nullptr for phModule"
        - "0 for inputSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Create Function object from Module by name"
name: $xModuleGetGlobal
analogue:
    - "**cuModuleGetGlobal**"
params:
    - type: "$x_module_handle_t"
      name: hModule
      desc: "[in] handle of the module"
    - type: "const char*"
      name: pGlobalName
      desc: "[in] name of function in global"
    - type: "size_t"
      name:  valueSize
      desc: "[out] size of value type"
    - type: "void*"
      name:  pGlobalValue
      desc: "[out] pointer to global value"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
        - "null ptr for pGlobalName"
        - "invalid name for pGlobalName"
        - "null ptr for pGlobalValue"
--- #--------------------------------------------------------------------------
type: function
desc: "Create Function object from Module by name"
name: $xModuleCreateFunction
analogue:
    - "**cuModuleGetFunction**"
params:
    - type: "$x_module_handle_t"
      name: hModule
      desc: "[in] handle of the module"
    - type: "const char*"
      name: pFunctionName
      desc: "[in] null-terminated name of function in Module"
    - type: "$x_function_handle_t*"
      name:  phFunction
      desc: "[out] handle of the Function object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
        - "null ptr for pFunctionName"
        - "invalid name for pFunctionName"
--- #--------------------------------------------------------------------------
type: function
desc: "Destroys Function object"
name: $xDestroyFunction
analogue:
    - "**cuModuleUnload**"
    - "cuCtxGetCurrent"
params:
    - type: "$x_function_handle_t"
      name: hFunction
      desc: "[in] handle of the function object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hFunction"
--- #--------------------------------------------------------------------------
type: function
desc: "Create Function arguments needed to pass arguments to a function."
name: $xCreateFunctionArgs
analogue:
    - ""
params:
    - type: "$x_function_handle_t"
      name: hFunction
      desc: "[in] handle of the function"
    - type: "$x_function_args_handle_t*"
      name:  phFunctionArgs
      desc: "[out] handle of the Function arguments object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hFunction"
        - "nullptr for phFunctionArgs"
--- #--------------------------------------------------------------------------
type: function
desc: "Destroys Function arguments object"
name: $xDestroyFunctionArgs
analogue:
    - ""
params:
    - type: "$x_function_args_handle_t"
      name: hFunctionArgs
      desc: "[in] handle of the function arguments buffer object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hFunctionArgs"
--- #--------------------------------------------------------------------------
type: function
desc: "Set function arguments within arguments buffer."
name: $xSetFunctionArgValue
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: "$x_function_args_handle_t"
      name: hFunctionArgs
      desc: "[in/out] handle of the function args object."
    - type: "uint32_t"
      name: argIndex
      desc: "[in] argument index in range [0, num args - 1]"
    - type: "size_t"
      name: argSize
      desc: "[in] size of argument type"
    - type: "const void*"
      name: pArgValue
      desc: "[in] argument value represented as matching arg type"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hFunction"
        - "invalid argument index"
        - "null ptr for pArgValue"
        - "invalid size specified"
        - "invalid handle for hFunctionArgs"
--- #--------------------------------------------------------------------------
type: enum
desc: "Function attributes"
analogue:
    - "**CUfunction_attribute**"
name: $x_function_attribute_t
etors:
    - name: $X_FUNCTION_ATTR_MAX_REGS_USED
      value: "0"
      desc: "Maximum device registers used for this function"
    - name: $X_FUNCTION_ATTR_MAX_THREADS_PER_GROUP
      desc: "Maximum threads required for this function"
    - name: $X_FUNCTION_ATTR_MAX_SHARED_MEM_SIZE
      desc: "Maximum shared memory required for this function"
--- #--------------------------------------------------------------------------
type: function
desc: "Query a function attribute."
name: $xQueryFunctionAttribute
analogue:
    - "**cuFuncGetAttribute**"
params:
    - type: "$x_function_handle_t"
      name: hFunction
      desc: "[in] handle of the function object"
    - type: "$x_function_attribute_t"
      name: attr
      desc: "[in] attribute to query"
    - type: "uint32_t*"
      name: pValue
      desc: "[out] returned attribute value"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hFunction"
        - "invalid value for attr"
        - "null ptr for pValue"
--- #--------------------------------------------------------------------------
type: function
desc: "Dispatch function instances given group and dispatch counts."
name: $xCommandListEncodeDispatchFunction
analogue:
    - "**cuLaunchKernel**"
params:
    - type: "$x_command_list_handle_t"
      name: hCommandList
      desc: "[in] handle of the command list"
    - type: "$x_function_handle_t"
      name: hFunction
      desc: "[in] handle of the function object"
    - type: "$x_function_args_handle_t"
      name: pFunctionArgs
      desc: "[in] pointer to function arguments buffer."
    - type: "uint32_t"
      name: groupCountX
      desc: "[in] width of group in X dimension"
    - type: "uint32_t"
      name: groupCountY
      desc: "[in] width of group in Y dimension"
    - type: "uint32_t"
      name: groupCountZ
      desc: "[in] width of group in Z dimension"
    - type: "uint32_t"
      name: dispatchCountX
      desc: "[in] width of dispatches in X dimension"
    - type: "uint32_t"
      name: dispatchCountY
      desc: "[in] width of dispatches in Y dimension"
    - type: "uint32_t"
      name: dispatchCountZ
      desc: "[in] width of dispatches in Z dimension"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hCommandQueue"
        - "invalid handle for hFunction"
        - "null ptr for function arguments buffer"
        - "invalid group count range for dispatch"
        - "invalid dispatch count range for dispatch"