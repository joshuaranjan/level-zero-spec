--- #--------------------------------------------------------------------------
type: header
desc: "Intel $Xx Driver APIs for Memory"
--- #--------------------------------------------------------------------------
type: function
desc: "Makes memory resident for the device."
name: $xDeviceMakeMemoryResident
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "void*"
      name: ptr
      desc: "[in] pointer to memory to make resident"
    - type: size_t
      name: size
      desc: "[in] size in bytes to make resident"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "nullptr for ptr"
--- #--------------------------------------------------------------------------
type: function
desc: "Allows memory to be evicted from the device."
name: $xDeviceEvictMemory
details:
    - "The application is responsible for making sure the GPU is not currently referencing the memory before it is evicted"
    - "Memory is always implicitly evicted if it is resident when freed."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "void*"
      name: ptr
      desc: "[in] pointer to memory to evict"
    - type: size_t
      name: size
      desc: "[in] size in bytes to evict"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "nullptr for ptr"
--- #--------------------------------------------------------------------------
type: function
desc: "Makes image resident for the device."
name: $xDeviceMakeImageResident
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: $x_image_handle_t
      name: hImage
      desc: "[in] handle of image to make resident"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hImage"
--- #--------------------------------------------------------------------------
type: function
desc: "Allows image to be evicted from the device."
name: $xDeviceEvictImage
details:
    - "The application is responsible for making sure the GPU is not currently referencing the memory before it is evicted"
    - "An image is always implicitly evicted if it is resident when destroyed."
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: $x_image_handle_t
      name: hImage
      desc: "[in] handle of image to make evict"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hImage"
