--- #--------------------------------------------------------------------------
type: header
desc: "Intel $Xx Driver APIs for Module"
--- #--------------------------------------------------------------------------
type: macro
desc: API version of $x_command_queue_desc_t
name: $X_MODULE_DESC_VERSION
value: "$X_MAKE_VERSION( 1, 0 )"
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module object from ISA"
name: $xCreateModuleFromISA
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "const char**"
      name: pISAModule
      desc: "[in] pointer to ISA module buffer"
    - type: "size_t"
      name: isaSize
      desc: "[in] size of ISA module buffer"
    - type: "$x_module_handle_t*"
      name: phModule
      desc: "[out] pointer to handle of module object created"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "nullptr for pISAModule"
        - "nullptr for phModule"
        - "0 for isaSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: enum
desc: "Supported IR types"
name: $x_module_ir_type_t
etors:
    - name: $X_MODULE_IR_SPIRV_TEXT
      value: "0"
      desc: "IR is spirv text format"
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module object from IR"
name: $xCreateModuleFromIR
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "$x_module_ir_type_t"
      name: irType
      desc: "[in] IR type that is passed in with pIRModule"
    - type: "const char**"
      name: pIRModule
      desc: "[in] pointer to IR module buffer"
    - type: "size_t"
      name: irSize
      desc: "[in] size of IR module buffer"
    - type: "$x_module_handle_t*"
      name: phModule
      desc: "[out] pointer to handle of module object created"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "nullptr for pIRModule"
        - "nullptr for phModule"
        - "0 for irSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module ISA object from IR"
name: $xCreateModuleISAFromIR
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "$x_module_ir_type_t"
      name: irType
      desc: "[in] IR type that is passed in with pIRModule"
    - type: "const char**"
      name: pIRModule
      desc: "[in] pointer to IR module buffer"
    - type: "size_t"
      name: irSize
      desc: "[in] size of IR module buffer"
    - type: "const char**"
      name: pISAModule
      desc: "[out] pointer to module ISA"
    - type: "size_t"
      name: isaSize
      desc: "[out] size of ISA module buffer"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "nullptr for pIRModule"
        - "nullptr for pISAModule"
        - "0 for irSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Creates module object from IR"
name: $xCreateModuleFromIR
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: $x_device_handle_t
      name: hDevice
      desc: "[in] handle of the device"
    - type: "$x_module_ir_type_t"
      name: irType
      desc: "[in] IR type that is passed in with pIRModule"
    - type: "const char**"
      name: pIRModule
      desc: "[in] pointer to IR module buffer"
    - type: "size_t"
      name: irSize
      desc: "[in] size of IR module buffer"
    - type: "$x_module_handle_t*"
      name: phModule
      desc: "[out] pointer to handle of module object created"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hDevice"
        - "nullptr for pIRModule"
        - "nullptr for phModule"
        - "0 for irSize"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Releases module"
name: $xReleaseModule
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: "$x_module_handle_t"
      name: hModule
      desc: "[in] handle of the module"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
--- #--------------------------------------------------------------------------
type: function
desc: "Create Function object from Module by name"
name: $xCreateFunctionFromModule
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: "$x_module_handle_t"
      name: hModule
      desc: "[in] handle of the module"
    - type: "const char*"
      name: pFunctionName
      desc: "[in] name of function in Module"
    - type: "$x_function_handle_t*"
      name:  phFunction
      desc: "[out] handle of the Function object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
        - "null ptr for pFunctionName"
        - "invalid name for pFunctionName"
--- #--------------------------------------------------------------------------
type: function
desc: "Releases Function object"
name: $xReleaseFunction
analogue:
    - "**cuCtxCreate**"
    - "cuCtxGetCurrent"
params:
    - type: "$x_function_handle_t"
      name: hModule
      desc: "[in] handle of the function object"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hModule"
