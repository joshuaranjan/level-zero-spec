--- #--------------------------------------------------------------------------
type: header
desc: "Intel $Xx Runtime APIs for Command List"
--- #--------------------------------------------------------------------------
type: macro
desc: "API version of $x_command_list_desc_t"
name: $X_COMMAND_LIST_DESC_VERSION
value: "$X_MAKE_VERSION( 1, 0 )"
--- #--------------------------------------------------------------------------
type: enum
desc: "Supported command List creation flags"
name: $x_command_list_flags_t
etors:
    - name: $X_COMMAND_LIST_FLAG_NONE
      value: "0"
      desc: "default behavior"
--- #--------------------------------------------------------------------------
type: struct
desc: "Command List descriptor"
name: $x_command_list_desc_t
members:
    - type: uint32_t
      name: version
      desc: "[in] $X_COMMAND_LIST_DESC_VERSION"
    - type: $x_command_list_flags_t
      name: flags
      desc: "[in] creation flags"
--- #--------------------------------------------------------------------------
type: function
desc: "Creates a command list for submitting commands to a command queue."
name: $xCommandListCreate
params:
    - type: $x_context_handle_t
      name: hContext
      desc: "[in] handle of the context"
    - type: "const $x_command_list_desc_t*"
      name: desc
      desc: "[in] pointer to command list descriptor"
    - type: $x_command_list_handle_t*
      name: phCommandList
      desc: "[out] pointer to handle of command list object created"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hContext"
        - "nullptr for desc"
        - "nullptr for phCommandList"
    - $X_RESULT_ERROR_OUT_OF_HOST_MEMORY
    - $X_RESULT_ERROR_OUT_OF_DEVICE_MEMORY
--- #--------------------------------------------------------------------------
type: function
desc: "Destroys a command list"
name: $xCommandListDestroy
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list object to destroy"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hCommandList"
--- #--------------------------------------------------------------------------
type: function
desc: "Close a command list"
name: $xCommandListClose
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list object to close"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hCommandList"
--- #--------------------------------------------------------------------------
type: function
desc: "Reset a command list to initial (empty) state"
name: $xCommandListReset
params:
    - type: $x_command_list_handle_t
      name: hCommandList
      desc: "[in] handle of command list object to reset"
returns:
    - $X_RESULT_ERROR_INVALID_PARAMETER:
        - "invalid handle for hCommandList"
