#
# Copyright (C) 2019 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Tool APIs for System Resource Management (Sysman) - ECC management"
--- #--------------------------------------------------------------------------
type: enum
desc: "ECC Status"
class: $sDevice
name: $s_device_ecc_status_t
etors:
    - name: NONE
      value: "0"
      desc: "None"
    - name: ENABLED
      value: "1"
      desc: "ECC enabled."
    - name: DISABLED
      value: "2"
      desc: "ECC disabled."
--- #--------------------------------------------------------------------------
type: enum
desc: "Status Change Requirements"
class: $sDevice
name: $s_device_action_t
etors:
    - name: NONE
      value: "0"
      desc: "No action."
    - name: WARM_RESET
      value: "1"
      desc: "Warm reset."
    - name: COLD_REBOOT
      value: "2"
      desc: "Cold reboot."
--- #--------------------------------------------------------------------------
type: struct
desc: "ECC Status Change Action"
class: $sDevice
name: $s_device_ecc_action_t
base: $s_base_t
members:
    - type: $s_device_action_t
      name: action
      desc: "[out] Action required for status change"
--- #--------------------------------------------------------------------------
type: struct
desc: "ECC Status"
class: $sDevice
name: $s_device_ecc_properties_t
base: $s_base_properties_t
members:
    - type: $s_device_ecc_status_t
      name: currentStatus
      desc: "[out] Current ECC status"
    - type: $s_device_ecc_status_t
      name: pendingStatus
      desc: "[out] Pending ECC status"
    - type: $s_device_ecc_action_t
      name: pendingAction
      desc: "[out] Pending action"
--- #--------------------------------------------------------------------------
type: function
desc: "Is ECC functionality available - true or false?"
class: $sDevice
name: EccAvailable
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: hDevice
      desc: "[in] Handle for the component."
    - type: $x_bool_t*
      name: pAvailable
      desc: "[out] ECC functionality is available (true)/unavailable (false)."
--- #--------------------------------------------------------------------------
type: function
desc: "Is ECC support configurable - true or false?"
class: $sDevice
name: EccConfigurable
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: hDevice
      desc: "[in] Handle for the component."
    - type: $x_bool_t*
      name: pConfigurable
      desc: "[out] ECC can be enabled/disabled (true)/enabled/disabled (false)."
--- #--------------------------------------------------------------------------
type: function
desc: "Action required to change ECC status"
class: $sDevice
name: GetEccAction
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: hDevice
      desc: "[in] Handle for the component."
    - type: $s_device_ecc_action_t
      name: pAction
      desc: "[out] Action required for ECC status change."
--- #--------------------------------------------------------------------------
type: function
desc: "Get current ECC status, pending status, and pending action"
class: $sDevice
name: GetEccStatus
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: hDevice
      desc: "[in] Handle for the component."
    - type: $s_device_ecc_properties_t*
      name: pStatus
      desc: "[out] ECC status, pending status, and pending action."
--- #--------------------------------------------------------------------------
type: function
desc: "Set new ECC status"
class: $sDevice
name: SetEccStatus
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $s_device_handle_t
      name: hDevice
      desc: "[in] Handle for the component."
    - type: $s_device_ecc_properties_t*
      name: pStatus
      desc: "[in, out] New ECC status, and pending action for status change."
