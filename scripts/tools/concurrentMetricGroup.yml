#
# Copyright (C) 2024 Intel Corporation
#
# SPDX-License-Identifier: MIT
#
# See YaML.md for syntax definition
#
--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Tool Experimental Extension to get Concurrent Metric Groups"
version: "1.10"
--- #--------------------------------------------------------------------------
type: macro
desc: "Concurrent Metric Groups Experimental Extension Name"
version: "1.10"
name: $T_CONCURRENT_METRIC_GROUPS_EXP_NAME
value: '"$XT_experimental_concurrent_metric_groups"'
--- #--------------------------------------------------------------------------
type: enum
desc: "Concurrent Metric Groups Experimental Extension Version(s)"
version: "1.10"
name: $t_concurrent_metric_groups_exp_version_t
etors:
    - name: "1_0"
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: function
desc: "Get sets of metric groups which could be collected concurrently."
version: "1.10"
class: $tDevice
name: GetConcurrentMetricGroupsExp
decl: static
details:
    - "Re-arrange the input metric groups to provide sets of concurrent metric groups."
params:
    - type: "$t_device_handle_t"
      name: hDevice
      desc: "[in] handle of the device"
    - type: "uint32_t"
      name: metricGroupCount
      desc: "[in] metric group count"
    - type: "$t_metric_group_handle_t *"
      name: phMetricGroups
      desc: "[in,out] metrics groups to be re-arranged to be sets of concurrent groups"
    - type: "uint32_t *"
      name: pMetricGroupsCountPerConcurrentGroup
      desc: |
            [in,out][optional][*pConcurrentGroupCount] count of metric groups per concurrent group.
    - type: "uint32_t *"
      name: pConcurrentGroupCount
      desc: |
            [out] number of concurrent groups.
            The value of this parameter could be used to determine the number of replays necessary.