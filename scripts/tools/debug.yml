--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Tool APIs for Program Debug"
--- #--------------------------------------------------------------------------
type: class
desc: "C++ wrapper for Debug API"
name: $tDebug
members:
    - type: "$t_debug_session_handle_t*"
      name: hDebug
      desc: "[in] debug session handle"
--- #--------------------------------------------------------------------------
type: handle
desc: "Debug session handle"
name: $t_debug_session_handle_t
--- #--------------------------------------------------------------------------
type: enum
desc: "Debug attach flags."
class: $tDebug
name: $t_debug_attach_flags_t
etors:
    - name: $T_DEBUG_ATTACH_NONE
      desc: "No attach flags"
      value: "0"
--- #--------------------------------------------------------------------------
type: function
desc: "Attach to a device."
class: $tDebug
name: Attach
decl: static
params:
    - type: $t_device_handle_t
      name: hDevice
      desc: "[in] device handle"
    - type: "int"
      name: pid
      desc: "[in] host process identifier"
    - type: "uint64_t"
      name: flags
      desc: "[in] a bit-vector of $t_debug_attach_flags_t"
    - type: "$t_debug_session_handle_t*"
      name: hDebug
      desc: "[out] debug session handle"
returns:
    - $X_RESULT_ERROR_INVALID_ARGUMENT:
        - "an invalid device handle has been supplied"
        - "an invalid process identifier has been supplied"
        - "an invalid flag has been supplied"
    - $X_RESULT_ERROR_UNSUPPORTED:
        - "attaching to this device is not supported"
    - $X_RESULT_ERROR_INSUFFICENT_PERMISSIONS:
        - "caller is not authorized to debug that process"
    - $X_RESULT_ERROR_DEVICE_ACCESS:
        - "a debugger is already attached"
--- #--------------------------------------------------------------------------
type: function
desc: "Close a debug session."
class: $tDebug
name: Detach
params:
    - type: $t_debug_session_handle_t
      name: hDebug
      desc: "[in][release] debug session handle"
returns:
    - $X_RESULT_ERROR_INVALID_ARGUMENT:
        - "an invalid debug handle has been supplied"
--- #--------------------------------------------------------------------------
type: function
desc: "Query the number of device threads for a debug session."
class: $tDebug
name: GetNumThreads
params:
    - type: $t_debug_session_handle_t
      name: hDebug
      desc: "[in] debug session handle"
    - type: "uint64_t"
      name: numThreads
      desc: "[out] the maximal number of threads"
returns:
    - $X_RESULT_ERROR_INVALID_ARGUMENT:
        - "an invalid debug handle has been supplied"
