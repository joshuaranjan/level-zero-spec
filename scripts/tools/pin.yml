--- #--------------------------------------------------------------------------
type: header
desc: "Intel $OneApi Level-Zero Tool APIs for Program Instrumentation (PIN)"
--- #--------------------------------------------------------------------------
type: function
desc: "Retrieve all function names in the module."
class: $tModule
name: GetFunctionNames
details:
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $t_module_handle_t
      name: hModule
      desc: "[in] handle of the device"
    - type: "uint32_t*"
      name: pCount
      desc: |
            [in,out] pointer to the number of names.
            if count is zero, then the driver will update the value with the total number of names available.
            if count is non-zero, then driver will only retrieve that number of names.
    - type: "const char**"
      name: pNames
      desc: "[in,out][optional][range(0, *pCount)] array of names of functions"
--- #--------------------------------------------------------------------------
type: enum
desc: "API version of $t_profile_info_t"
class: $tFunction
name: $t_profile_info_version_t
etors:
    - name: $T_PROFILE_INFO_VERSION_CURRENT
      value: "$X_MAKE_VERSION( 1, 0 )"
      desc: "version 1.0"
--- #--------------------------------------------------------------------------
type: enum
desc: "Supportted profile features"
class: $tFunction
name: $t_profile_flag_t
etors:
    - name: $T_PROFILE_FLAG_RERA
      value: "$X_BIT(0)"
      desc: "RERA"
    - name: $T_PROFILE_FLAG_GRF
      value: "$X_BIT(1)"
      desc: "free GRF info"
    - name: $T_PROFILE_FLAG_SRCLINE
      value: "$X_BIT(2)"
      desc: "source line mapping"
--- #--------------------------------------------------------------------------
type: struct
desc: "Profiling meta-data for instrumentation"
class: $tFunction
name: $t_profile_info_t
members:
    - type: $t_profile_info_version_t
      name: version
      desc: "[in] $T_PROFILE_INFO_VERSION_CURRENT"
      init: "$T_PROFILE_INFO_VERSION_CURRENT"
    - type: $t_profile_flag_t
      name: flags
      desc: "[out] indicates which flags were enabled during compilation"
    - type: uint32_t
      name: numTokens
      desc: "[out] number of tokens immediately following this structure"
--- #--------------------------------------------------------------------------
type: enum
desc: "Supported profile token types"
class: $tFunction
name: $t_profile_token_type_t
etors:
    - name: $T_PROFILE_TOKEN_TYPE_FREE_REGISTER
      desc: "GRF info"
--- #--------------------------------------------------------------------------
type: struct
desc: "Profile free register token detailing unused registers in the current function"
class: $tFunction
name: $t_profile_free_register_token_t
members:
    - type: $t_profile_token_type_t
      name: type
      desc: "[out] type of token"
    - type: uint32_t
      name: size
      desc: "[out] total size of the token, in bytes"
    - type: uint32_t
      name: count
      desc: "[out] number of register sequences immediately following this structure"
--- #--------------------------------------------------------------------------
type: struct
desc: "Profile register sequence detailing consecutive bytes, all of which are unused"
class: $tFunction
name: $t_profile_register_sequence_t
members:
    - type: uint32_t
      name: start
      desc: "[out] starting byte in the register table, representing the start of unused bytes in the current function"
    - type: uint32_t
      name: count
      desc: "[out] number of consecutive bytes in the sequence, starting from start"
--- #--------------------------------------------------------------------------
type: function
desc: "Retrieve profiling information generated for the function."
class: $tFunction
name: GetProfileInfo
details:
    - "Module must be created using the following build option:":
        - "\"-$t-profile-flags <n>\" - enable generation of profile information"
        - "\"<n>\" must be a combination of $t_profile_flag_t, in hex"
    - "The application may call this function from simultaneous threads."
    - "The implementation of this function should be lock-free."
params:
    - type: $t_function_handle_t
      name: hFunction
      desc: "[in] handle to function"
    - type: "$t_profile_info_t*"
      name: pInfo
      desc: "[out] pointer to profile info"
